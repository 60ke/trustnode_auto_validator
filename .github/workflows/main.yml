name: Publish Go Binary

# 触发条件：在 push 到 main 分支后
on:
  push:
    branches:
      - release
env:
  GITHUB_TOKEN: ${{ secrets.GOACTION }}      
jobs:
  buildAndDeploy:
    runs-on:  ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 使用checkout
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with: 
        go-version: '>=1.16.0'
    - run: go version
    - name: make
      run: make all          
    - name: Packaging...
      run: tar czf nodeUpgrade.tgz nodeUpgrade*
    - name: Get version
      id: version
      env:
        TAG: ${{ github.head_ref }}
      run: echo "::set-output name=version::$(git rev-parse --short HEAD)"
    - name: Gets latest created release info
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag:  ${{ steps.version.outputs.version }}
          prerelease: true
          title: "Development Build"
          files: |
            ./nodeUpgrade*.tgz  
#     - name: Uploading assets...
#       # if: ${{ !env.ACT }}
#       # id: upload-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GOACTION }}
#       with:
#         upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
#         asset_path: ./nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
#         asset_name: nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
#         asset_content_type: application/gzip
